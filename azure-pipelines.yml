# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml


trigger: none

stages:
- stage: Build
  displayName: Build 
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: windows-latest

    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '14.15.1'
      displayName: 'Install Node.js'

    - script: |
        npm install
        npm run build
      displayName: 'npm install and build'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop


- stage: DeployStaging
  displayName: Deploy to Pre Prod
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: Deploy
    displayName: Deploy to Pre Prod
    pool:
      vmImage: windows-latest
    
    steps:
    - task: AzureResourceManagerTemplateDeployment@3
      inputs:
        deploymentScope: 'Resource Group'
        azureResourceManagerConnection: 'Cloud-Native-Testing-IDC-Test(7c71b563-0dc0-4bc0-bcf6-06f8f0516c7a)'
        subscriptionId: 'afc11291-9826-46be-b852-70349146ddf8'
        action: 'Create Or Update Resource Group'
        resourceGroupName: 'demo-sampleapp-rg'
        location: 'East US'
        templateLocation: 'Linked artifact'
        csmFile: '$(System.DefaultWorkingDirectory)/windows-webapp-template.json'
        overrideParameters: '-webAppName demo-sampleapp -hostingPlanName demo-sampleapp-host -appInsightsLocation "East US" -databaseAccountId ado-sampleappdb -databaseAccountLocation "East US"'
        deploymentMode: 'Incremental'
        deploymentOutputs: 'deploymentOutputs'
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          $deploymentOutputs=(ConvertFrom-Json '$(deploymentOutputs)')
          $connectionString=$($deploymentOutputs.azureCosmosDBAccountKeys.value.connectionStrings[0].connectionString)
          Write-Host "##vso[task.setvariable variable=connectionString;issecret=true;]$connectionString"
    - task: AzureAppServiceSettings@1
      inputs:
        azureSubscription: 'Cloud-Native-Testing-IDC-Test(7c71b563-0dc0-4bc0-bcf6-06f8f0516c7a)'
        appName: 'demo-sampleapp'
        resourceGroupName: 'demo-sampleapp-rg'
        appSettings: |
          [
             {
              "name": "CONNECTION_STRING",
              "value": "$(connectionString)",
              "slotSetting": false
             },
             {
              "name": "MSDEPLOY_RENAME_LOCKED_FILES",
              "value": 1,
              "slotSetting": false
             }             
          ]
    - task: DownloadPipelineArtifact@2
      inputs:
        artifact: drop
    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: Cloud-Native-Testing-IDC-Test(7c71b563-0dc0-4bc0-bcf6-06f8f0516c7a)'
        appType: 'webApp'
        WebAppName: 'demo-sampleapp'
        packageForLinux: '$(Pipeline.Workspace)/$(Build.BuildId).zip'
        enableCustomDeployment: true
        DeploymentType: 'zipDeploy'
        TakeAppOfflineFlag: false
